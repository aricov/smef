package smef.examples;

import java.util.function.Consumer;
import java.util.stream.Stream;

import smef.examples.Action.Jump;
import smef.examples.Action.Turn;
import smef.examples.Action.Walk;

/**
 * Classes in this example have been generated by the smef maven plugin configured in the POM.
 * @author AricoV
 */
public class PluginExample {

	public PluginExample() {
	}

	public static void main(String... args) {
		// Show casing how the inheritance hierarchy of builders work out at the lowest level.
		
		new Consumer<Action>() {

			@Override
			public void accept(Action t) {
				// TODO Auto-generated method stub
				
			}
		};
		
		Stream<Action> actions = Stream.of(
		ImmutableAction.Walk.builder()
				.id(1)
				.user("you")
				.distance(30)
				.build()
		);
		
			
		// Let's print things out, we use the consumer visitor interface.
		actions.forEach(new Action.VConsumer() {
			
			@Override
			public void apply(Turn msg) {
				System.out.printf("[%d] %s turns %s \n", msg.id(), msg.user(), msg.dir());
			}
			
			@Override
			public void apply(Jump msg) {
				System.out.printf("[%d] %s jumps \n", msg.id(), msg.user());
			}
			
			@Override
			public void apply(Walk msg) {
				System.out.printf("[%d] %s walks %d paces \n", msg.id(), msg.user(), msg.distance());
			}
		});
	}
}
